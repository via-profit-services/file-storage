/*!
 * 
 *  Via Profit Services / Settings Manager
 * 
 *  Repository https://gitlab.com/via-profit-services/file-storage
 *  Contact    promo@via-profit.ru
 *  Website    https://via-profit.ru
 *       
 */
module.exports=function(e){var n={};function i(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=e,i.c=n,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)i.d(t,a,function(n){return e[n]}.bind(null,a));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s=9)}([function(e,n){e.exports=require("@via-profit-services/core")},function(e,n,i){"use strict";var t=this&&this.__awaiter||function(e,n,i,t){return new(i||(i=Promise))((function(a,r){function o(e){try{d(t.next(e))}catch(e){r(e)}}function l(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?a(e.value):(n=e.value,n instanceof i?n:new i((function(e){e(n)}))).then(o,l)}d((t=t.apply(e,n||[])).next())}))},a=this&&this.__rest||function(e,n){var i={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&n.indexOf(t)<0&&(i[t]=e[t]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(t=Object.getOwnPropertySymbols(e);a<t.length;a++)n.indexOf(t[a])<0&&Object.prototype.propertyIsEnumerable.call(e,t[a])&&(i[t[a]]=e[t[a]])}return i},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const o=r(i(8)),l=r(i(3)),d=i(0),u=r(i(14)),s=r(i(15)),m=r(i(16)),c=r(i(17)),p=r(i(2)),f=r(i(18)),y=r(i(19)),k=r(i(20)),v=r(i(21)),g=i(22),N=i(4),h=i(5),T=i(6);class F{constructor(e){this.props=e}clearCache(){return t(this,void 0,void 0,(function*(){const{cacheAbsolutePath:e,rootPath:n}=h.getParams(),{redis:i,logger:t}=this.props.context;e!==n&&o.default.existsSync(e)&&(yield i.del(N.REDIS_CACHE_NAME),v.default(e+"/*",e=>{e&&t.fileStorage.error("Failed to remove cache directory",{err:e})}),t.fileStorage.info(`Cache was cleared in «${e}»`))}))}checkFileInCache(e){return t(this,void 0,void 0,(function*(){const{redis:n}=this.props.context;return yield n.hget(N.REDIS_CACHE_NAME,e)}))}saveImageIntoTheCache(e,n){return t(this,void 0,void 0,(function*(){const{redis:i}=this.props.context,{payload:t,token:a}=e,{cacheAbsolutePath:r}=h.getParams(),d=F.getPathFromUuid(g.v4()),u=l.default.join(r,d),s=`${u}.${t.ext}`,m=l.default.dirname(u);o.default.existsSync(m)||o.default.mkdirSync(m,{recursive:!0}),o.default.writeFileSync(s,n),yield i.hset(N.REDIS_CACHE_NAME,a,s)}))}getUrlWithTransform(e,n){const{jwt:i}=this.props.context,{url:t,id:a,mimeType:r,isLocalFile:l}=e,{ssl:d,host:u,staticPrefix:s,transformDelimiter:m}=h.getParams(),c=F.getExtensionByMimeType(r),p={id:a,ext:c,mimeType:r,transform:n};l||(p.url=t);const y=o.default.readFileSync(i.privateKey);return[`http${d?"s":""}://${u}${s}`,m,`${f.default.sign(p,y,{algorithm:i.algorithm})}.${c}`].join("/")}getImageDataFromTransformUrl(e){const{jwt:n}=this.props.context,{transformDelimiter:i}=h.getParams(),t=e.split("/");if(t.length<4)throw new d.ServerError("Incorrect URL");const a=t[2],r=t[3].split(".").slice(0,-1).join(".");if(a!==i)throw new d.ServerError("Incorrect transform delimiter URL",{delimiter:a});if(!r)throw new d.ServerError("Incorrect data or extension in URL",{token:r});const l=o.default.readFileSync(n.publicKey);try{return{payload:f.default.verify(String(r),l),token:r}}catch(e){throw new d.ServerError("Failed to URL decode",{err:e})}}static getPathFromUuid(e){return[e.substr(0,2),e.substr(2,2),e.substr(4)].join("/")}static getFilenameFromUuid(e){const{storagePath:n}=h.getParams(),i=F.getPathFromUuid(e);return l.default.join("/",n,i)}static getFileTypeByMimeType(e){switch(e){case"image/tiff":case"image/png":case"image/jpeg":case"image/gif":case"image/svg":return T.FileType.image;default:return T.FileType.document}}static getExtensionByMimeType(e){return y.default.extension(e)||"txt"}static getMimeTypeByExtension(e){return y.default.lookup(e)||"text/plain"}static extractExtensionFromFilename(e){return e.split(".").pop()}static getMimeTypeByFilename(e){const n=F.extractExtensionFromFilename(e);return F.getMimeTypeByExtension(n)}getFiles(e){return t(this,void 0,void 0,(function*(){const{context:n}=this.props,{knex:i}=n,{staticPrefix:t,host:r,ssl:o,staticDelimiter:l}=h.getParams(),{limit:u,offset:s,orderBy:m,where:c}=e,p=yield i.select(["*",i.raw('count(*) over() as "totalCount"')]).orderBy(d.convertOrderByToKnex(m)).from("fileStorage").limit(u||1).offset(s||0).where(e=>d.convertWhereToKnex(e,c)).orderBy(d.convertOrderByToKnex(m)).then(e=>({totalCount:e.length?Number(e[0].totalCount):0,nodes:e.map(e=>{var{totalCount:n,url:i}=e,d=a(e,["totalCount","url"]);return Object.assign(Object.assign({},d),{url:d.isLocalFile?`http${o?"s":""}://${r}${t}/${l}/${i}`:i})})})),{totalCount:f,nodes:y}=p;return{totalCount:f,nodes:y,where:c,orderBy:m,limit:u,offset:s}}))}getFilesByIds(e){return t(this,void 0,void 0,(function*(){const{nodes:n}=yield this.getFiles({where:[["id",d.TWhereAction.IN,e]],offset:0,limit:e.length});return n}))}getDriver(e){return t(this,void 0,void 0,(function*(){const n=yield this.getFilesByIds([e]);return!!n.length&&n[0]}))}updateFile(e,n){return t(this,void 0,void 0,(function*(){const{knex:i,timezone:t}=this.props.context;yield i("fileStorage").update(Object.assign(Object.assign({},n),{updatedAt:k.default.tz(t).format()})).where("id",e)}))}createFile(e,n,i){return t(this,void 0,void 0,(function*(){const{knex:a,timezone:r}=this.props.context,{storageAbsolutePath:f,compressionOptions:y}=h.getParams(),v=n.id||g.v4(),N=F.getExtensionByMimeType(n.mimeType),T=`${F.getPathFromUuid(v)}.${N}`,I=n.url||T,D=(yield a("fileStorage").insert(Object.assign(Object.assign({isLocalFile:!0,id:v,url:I,type:F.getFileTypeByMimeType(n.mimeType)},n),{createdAt:k.default.tz(r).format(),updatedAt:k.default.tz(r).format()})).returning("id"))[0];if(!D)throw new d.ServerError("Failed to register file in Database");const _=l.default.join(f,T),S=l.default.dirname(_);return new Promise(a=>{o.default.existsSync(S)||o.default.mkdirSync(S,{recursive:!0}),e.pipe(o.default.createWriteStream(_)).on("close",()=>{if(["image/png","image/jpeg"].includes(n.mimeType)){const{imageOptimMaxWidth:e,imageOptimMaxHeight:n}=h.getParams();p.default.read(_).then(i=>i.scaleToFit(e,n)).then(e=>e.writeAsync(_)).then(()=>t(this,void 0,void 0,(function*(){if(i)return;const e=yield u.default([_],{plugins:[s.default(y.mozJpeg),c.default(y.pngQuant),m.default(y.optiPng)]}),{data:n}=e[0];o.default.writeFileSync(_,n)}))).then(()=>a({id:D,absoluteFilename:_}))}else a({id:D,absoluteFilename:_})})})}))}deleteFiles(e){return t(this,void 0,void 0,(function*(){const{knex:n}=this.props.context,i=yield this.getFilesByIds(e);return i.length&&i.forEach(e=>{if(e.isLocalFile||e.url.match(/^\/[a-z0-9]+/i)){const n=F.getFilenameFromUuid(e.id),i=l.default.resolve(n),t=l.default.dirname(n),a=l.default.resolve(t,"..");try{o.default.existsSync(i)&&o.default.unlinkSync(i),o.default.readdirSync(t).length&&o.default.unlinkSync(t),o.default.readdirSync(a).length&&o.default.unlinkSync(a)}catch(n){throw new d.ServerError(`\n              Failed to delete file ${e.id} in path ${i}`,{err:n})}}}),yield n("fileStorage").del().whereIn("id",e).returning("id")}))}}n.FileStorageService=F,n.default=F},function(e,n){e.exports=require("jimp")},function(e,n){e.exports=require("path")},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const t=i(0);n.LOG_MAZ_FILES=t.LOG_MAZ_FILES,n.LOG_MAZ_SIZE=t.LOG_MAZ_SIZE,n.LOG_DATE_PATTERNT=t.LOG_DATE_PATTERNT,n.LOG_FILENAME_DEBUG=t.LOG_FILENAME_DEBUG,n.LOG_FILENAME_ERRORS=t.LOG_FILENAME_ERRORS,n.CRON_JOB_CLEAR_CACHE_NAME="fileStorageClearCache",n.REDIS_CACHE_NAME="fileStorageCache",n.LOG_FILENAME_FILES_STORAGE="file-storage-%DATE%.log"},function(e,n,i){"use strict";(function(e){var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=t(i(3)),r=a.default.join(e,"..","..",".."),o={params:{storagePath:"./public/fileStorage/files",cachePath:"./public/fileStorage/cache",staticPrefix:"/static",ssl:!1,host:"localhost",clearCacheCronJob:"* 30 04 * * */6",staticPrefixAbsolutePath:"",storageAbsolutePath:"",cacheAbsolutePath:"",rootPath:r,imageOptimMaxWidth:800,imageOptimMaxHeight:600,staticDelimiter:"s",transformDelimiter:"t",cacheDelimiter:"c",compressionOptions:{mozJpeg:{quality:70},pngQuant:{quality:[.8,.8]},optiPng:{optimizationLevel:3}}}};n.setParams=e=>{o.params=Object.assign(Object.assign({},o.params),e),o.params=Object.assign(Object.assign({},o.params),{staticPrefixAbsolutePath:a.default.resolve(r,o.params.staticPrefix),storageAbsolutePath:a.default.resolve(r,o.params.storagePath),cacheAbsolutePath:a.default.resolve(r,o.params.cachePath)})},n.getParams=()=>o.params,n.default=o}).call(this,"src/schemas/file-storage")},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){e.image="image",e.document="document"}(n.FileType||(n.FileType={}))},function(e,n,i){"use strict";var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=i(0),r=t(i(1)),o={files:null};n.default=function(e){if(null!==o.files)return o;const n=new r.default({context:e});return o.files=new a.DataLoader(e=>n.getFilesByIds(e).then(n=>a.collateForDataloader(e,n))),o}},function(e,n){e.exports=require("fs")},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),function(e){for(var i in e)n.hasOwnProperty(i)||(n[i]=e[i])}(i(10))},function(e,n,i){"use strict";var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=t(i(2));n.Jimp=a.default,function(e){for(var i in e)n.hasOwnProperty(i)||(n[i]=e[i])}(i(11))},function(e,n,i){"use strict";function t(e){for(var i in e)n.hasOwnProperty(i)||(n[i]=e[i])}var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=a(i(12));n.makeSchema=r.default;const o=a(i(1));n.service=o.default,t(i(6)),t(i(31))},function(e,n,i){"use strict";var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var i in e)Object.hasOwnProperty.call(e,i)&&(n[i]=e[i]);return n.default=e,n};Object.defineProperty(n,"__esModule",{value:!0});const r=t(i(13)),o=i(5),l=t(i(23)),d=t(i(25)),u=a(i(30));n.makeSchema=e=>{o.setParams(e);const n=r.default(o.getParams());return{typeDefs:u,resolvers:d.default,permissions:l.default,expressMiddleware:n}},n.default=n.makeSchema},function(e,n,i){"use strict";var t=this&&this.__awaiter||function(e,n,i,t){return new(i||(i=Promise))((function(a,r){function o(e){try{d(t.next(e))}catch(e){r(e)}}function l(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?a(e.value):(n=e.value,n instanceof i?n:new i((function(e){e(n)}))).then(o,l)}d((t=t.apply(e,n||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=a(i(8)),o=a(i(3)),l=i(0),d=a(i(2)),u=i(4),s=i(5),m=a(i(1));n.default=e=>n=>{const i=n.context,{staticPrefix:a}=e,{logger:c}=i,{storageAbsolutePath:p,staticDelimiter:f,transformDelimiter:y,rootPath:k,cacheAbsolutePath:v,cacheDelimiter:g,clearCacheCronJob:N}=s.getParams(),h=new m.default({context:i}),T=l.Express.Router();return l.CronJobManager.addJob(u.CRON_JOB_CLEAR_CACHE_NAME,{cronTime:N,onTick:()=>h.clearCache(),start:!0}),c.fileStorage.info(`Cron job for clear cache was created at «${N}»`),T.use(`${a}/${f}`,l.Express.static(p)),c.fileStorage.info(`Registered static directory in «${p}» with static prefix «${a}»`),T.use(`${a}/${g}`,l.Express.static(v)),c.fileStorage.info(`Registered static cache directory in «${v}»`),T.use(`${a}/${y}`,(e,n)=>t(void 0,void 0,void 0,(function*(){let i;try{i=h.getImageDataFromTransformUrl(e.originalUrl)}catch(e){return c.fileStorage.error("Failed to URL decode"),n.status(400).end()}const{payload:t,token:a}=i,l=yield h.checkFileInCache(a);if(l&&r.default.existsSync(l))return n.sendFile(l);let u;try{u=yield d.default.read(t.url?t.url:`${o.default.resolve(o.default.join(k,m.default.getFilenameFromUuid(t.id)))}.${t.ext}`)}catch(e){return c.fileStorage.error("Failed to read image",{err:e}),n.status(400).end()}const s=m.default.getMimeTypeByExtension(t.ext),{transform:p}=t;Object.entries(p).forEach(([e,n])=>{if("resize"===e){const{width:e,height:i}=n;u=u.resize(e,i)}if("cover"===e){const{width:e,height:i}=n;u=u.cover(e,i)}if("contain"===e){const{width:e,height:i}=n;u=u.contain(e,i)}if("scaleToFit"===e){const{width:e,height:i}=n;u=u.scaleToFit(e,i)}if("gaussian"===e){const e=n;u=u.gaussian(e)}if("blur"===e){const e=n;u=u.gaussian(e)}if("greyscale"===e){!0===n&&(u=u.grayscale())}});try{const e=yield u.getBufferAsync(s);h.saveImageIntoTheCache(i,e),n.writeHead(200,{"Content-Type":s}),n.end(e,"binary")}catch(e){return c.fileStorage.error("Failed to get image buffer"),n.status(400).end()}return n.status(400).end()}))),T}},function(e,n){e.exports=require("imagemin")},function(e,n){e.exports=require("imagemin-mozjpeg")},function(e,n){e.exports=require("imagemin-optipng")},function(e,n){e.exports=require("imagemin-pngquant")},function(e,n){e.exports=require("jsonwebtoken")},function(e,n){e.exports=require("mime-types")},function(e,n){e.exports=require("moment-timezone")},function(e,n){e.exports=require("rimraf")},function(e,n){e.exports=require("uuid")},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const t=i(24);n.permissions=t.shield({}),n.default=n.permissions},function(e,n){e.exports=require("graphql-shield")},function(e,n,i){"use strict";var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=t(i(26)),r=t(i(27)),o=t(i(28)),l=t(i(29)),d={Query:{fileStorage:()=>({})},Mutation:{fileStorage:()=>({})},FileStorageQuery:{list:o.default,image:(e,n)=>n},FileStorageMutation:{delete:a.default,upload:l.default},File:r.default,Image:r.default};n.default=d},function(e,n,i){"use strict";var t=this&&this.__awaiter||function(e,n,i,t){return new(i||(i=Promise))((function(a,r){function o(e){try{d(t.next(e))}catch(e){r(e)}}function l(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?a(e.value):(n=e.value,n instanceof i?n:new i((function(e){e(n)}))).then(o,l)}d((t=t.apply(e,n||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=i(0),o=a(i(7)),l=a(i(1));n.default=(e,n,i)=>t(void 0,void 0,void 0,(function*(){const{ids:e}=n,{logger:t,token:a}=i,{uuid:d}=a,u=new l.default({context:i}),s=o.default(i);try{const n=yield u.deleteFiles(e);return n.forEach(e=>{s.files.clear(e),t.fileStorage.debug(`File ${e} was deleted. Initiator: Account ${d}`)}),n.length!==e.length&&t.fileStorage.debug("Not all files were deleted, because some of them were not found in the database"),!0}catch(e){throw t.fileStorage.error("Failed to Delete files",{err:e,uuid:d}),new r.ServerError("Failed to Delete files",{err:e,uuid:d})}}))},function(e,n,i){"use strict";var t=this&&this.__awaiter||function(e,n,i,t){return new(i||(i=Promise))((function(a,r){function o(e){try{d(t.next(e))}catch(e){r(e)}}function l(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?a(e.value):(n=e.value,n instanceof i?n:new i((function(e){e(n)}))).then(o,l)}d((t=t.apply(e,n||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=i(0),o=a(i(7)),l=a(i(1)),d=i(6),u=new Proxy({id:()=>({}),createdAt:()=>({}),updatedAt:()=>({}),owner:()=>({}),category:()=>({}),mimeType:()=>({}),url:()=>({}),type:()=>({}),description:()=>({}),metaData:()=>({})},{get:(e,n)=>(e,i,a)=>t(void 0,void 0,void 0,(function*(){const{id:i,transform:t}=e,u=new l.default({context:a}),s=o.default(a),m=yield s.files.load(i);if(!m)throw new r.ServerError(`File with id ${i} not found`,{id:i});return m.type===d.FileType.image&&"url"===n&&t?u.getUrlWithTransform(m,t):m[n]}))});n.default=u},function(e,n,i){"use strict";var t=this&&this.__awaiter||function(e,n,i,t){return new(i||(i=Promise))((function(a,r){function o(e){try{d(t.next(e))}catch(e){r(e)}}function l(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?a(e.value):(n=e.value,n instanceof i?n:new i((function(e){e(n)}))).then(o,l)}d((t=t.apply(e,n||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=i(0),o=a(i(7)),l=a(i(1));n.default=(e,n,i)=>t(void 0,void 0,void 0,(function*(){const{transform:e}=n,{logger:t}=i,a=r.buildQueryFilter(n),d=new l.default({context:i}),u=o.default(i);try{const n=yield d.getFiles(a),i=r.buildCursorConnection(n,"files");return u.files.clearAll(),e&&(i.edges=i.edges.map(({node:n,cursor:i})=>({cursor:i,node:Object.assign(Object.assign({},n),{transform:e})}))),n.nodes.forEach(e=>{u.files.prime(e.id,e)}),i}catch(e){throw t.fileStorage.error("Failed to get Files list",{err:e}),new r.ServerError("Failed to get Files list",{err:e})}}))},function(e,n,i){"use strict";var t=this&&this.__awaiter||function(e,n,i,t){return new(i||(i=Promise))((function(a,r){function o(e){try{d(t.next(e))}catch(e){r(e)}}function l(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?a(e.value):(n=e.value,n instanceof i?n:new i((function(e){e(n)}))).then(o,l)}d((t=t.apply(e,n||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const r=i(0),o=a(i(1));n.default=(e,n,i)=>t(void 0,void 0,void 0,(function*(){const{files:e,info:a,noCompress:l}=n,{logger:d,token:u}=i,{uuid:s}=u,m=new o.default({context:i}),c=[];return yield e.reduce((e,n,i)=>t(void 0,void 0,void 0,(function*(){yield e;const{createReadStream:t,filename:u}=yield n,p=o.default.getMimeTypeByFilename(u);try{const e=yield m.createFile(t(),Object.assign({mimeType:p},a[i]),l);d.fileStorage.info(`File uploaded successfully in [${e.absoluteFilename}]`,{uuid:s,mimeType:p}),c[i]={id:e.id}}catch(e){throw d.fileStorage.error("Failed to Upload files",{err:e,uuid:s}),new r.ServerError("Failed to Upload files",{err:e,uuid:s})}})),Promise.resolve()),c}))},function(e,n){var i={kind:"Document",definitions:[{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"fileStorage"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileStorageQuery"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"fileStorage"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileStorageMutation"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"FileStorageMutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Delete files by IDs",block:!0},name:{kind:"Name",value:"delete"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"ids"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Upload files",block:!0},name:{kind:"Name",value:"upload"},arguments:[{kind:"InputValueDefinition",description:{kind:"StringValue",value:'Array of files\nFor example `curl` request will be:\ncurl localhost:3001/graphql \\\n-F operations=\'{ "query": "mutation($files: [FileUpload!]! $info: [FileUploadInfo!]!) { multipleUpload(files: $files info: $info) { id url } }", "variables": { "files": [null, null] }, "info": [{"owner": "xxxx-xxx-xxx", "category": "other"}, {"owner": "xxxx-xxx-xxx", "category": "other"}] }\' \\\n-F map=\'{ "0": ["variables.files.0"], "1": ["variables.files.1"] }\' \\\n-F 0=@b.txt \\\n-F 1=@c.txt',block:!0},name:{kind:"Name",value:"files"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUpload"}}}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"info"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUploadInfo"}}}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images.\nIf true, the image will not be compressed",block:!0},name:{kind:"Name",value:"noCompress"},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}}},directives:[]}]},{kind:"InputObjectTypeDefinition",description:{kind:"StringValue",value:"Information about uploaded file",block:!0},name:{kind:"Name",value:"FileUploadInfo"},directives:[],fields:[{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Your file owner",block:!0},name:{kind:"Name",value:"owner"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Voluntary name of category",block:!0},name:{kind:"Name",value:"category"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Description of this file",block:!0},name:{kind:"Name",value:"description"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Voluntary metadata of this file (e.g. title, alt for images)",block:!0},name:{kind:"Name",value:"metaData"},type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"FileStorageQuery"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Returns Drivers list bundle",block:!0},name:{kind:"Name",value:"list"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"first"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"offset"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"after"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"orderBy"},type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesOrderBy"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"filter"},type:{kind:"NamedType",name:{kind:"Name",value:"FilesListFilter"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"transform"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInput"}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesListConnection"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Returns single image",block:!0},name:{kind:"Name",value:"image"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"transform"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInput"}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Image"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Returns single file",block:!0},name:{kind:"Name",value:"file"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"FilesListFilter"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"owner"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"category"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"mimeType"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"File adge bundle",block:!0},name:{kind:"Name",value:"FilesEdge"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Edge"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"node"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"cursor"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",description:{kind:"StringValue",value:"Possible data to order list of files",block:!0},name:{kind:"Name",value:"FilesOrderBy"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"field"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesOrderField"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"direction"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"OrderDirection"}}},directives:[]}]},{kind:"EnumTypeDefinition",description:{kind:"StringValue",value:"Possible data to sort of files list",block:!0},name:{kind:"Name",value:"FilesOrderField"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"category"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"mimeType"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"createdAt"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"updatedAt"},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"FileType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"image"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"document"},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"Files list connection",block:!0},name:{kind:"Name",value:"FilesListConnection"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Connection"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"totalCount"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"pageInfo"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PageInfo"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"edges"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesEdge"}}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"File"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Node"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"createdAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"updatedAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"owner"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileType"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"category"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"mimeType"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"url"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"description"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"metaData"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"Image"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Node"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"createdAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"updatedAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"owner"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileType"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"category"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"mimeType"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"url"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"description"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"metaData"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"resize"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputResize"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cover"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputCover"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"contain"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputContain"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"scaleToFit"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputScaleToFit"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"gaussian"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"blur"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"quality"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"greyscale"},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputResize"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"width"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"height"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputCover"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"width"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"height"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputContain"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"width"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"height"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputScaleToFit"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"width"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"height"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]}],loc:{start:0,end:3206}};i.loc.source={body:'\nextend type Query {\n  fileStorage: FileStorageQuery!\n}\n\nextend type Mutation {\n  fileStorage: FileStorageMutation!\n}\n\ntype FileStorageMutation {\n  """\n  Delete files by IDs\n  """\n  delete(ids: [ID!]!): Boolean\n  \n  """\n  Upload files\n  """\n  upload(\n    """\n    Array of files\n    For example `curl` request will be:\n    curl localhost:3001/graphql \\\n    -F operations=\'{ "query": "mutation($files: [FileUpload!]! $info: [FileUploadInfo!]!) { multipleUpload(files: $files info: $info) { id url } }", "variables": { "files": [null, null] }, "info": [{"owner": "xxxx-xxx-xxx", "category": "other"}, {"owner": "xxxx-xxx-xxx", "category": "other"}] }\' \\\n    -F map=\'{ "0": ["variables.files.0"], "1": ["variables.files.1"] }\' \\\n    -F 0=@b.txt \\\n    -F 1=@c.txt\n    """\n    files: [FileUpload!]!\n    info: [FileUploadInfo!]!\n    \n    """\n    Only for images.\n    If true, the image will not be compressed\n    """\n    noCompress: Boolean\n  ): [File!]\n}\n\n"""\nInformation about uploaded file\n"""\ninput FileUploadInfo {\n\n  """\n  Your file owner\n  """\n  owner: ID!\n\n  """\n  Voluntary name of category\n  """\n  category: String!\n\n  """\n  Description of this file\n  """\n  description: String\n\n  """\n  Voluntary metadata of this file (e.g. title, alt for images)\n  """\n  metaData: JSON\n}\n\ntype FileStorageQuery {\n  """\n  Returns Drivers list bundle\n  """\n  list(\n    first: Int\n    offset: Int\n    after: String\n    orderBy: [FilesOrderBy]\n    filter: FilesListFilter\n    transform: ImageTransformInput\n  ): FilesListConnection!\n\n  """\n  Returns single image\n  """\n  image(id: ID! transform: ImageTransformInput): Image!\n  \n  """\n  Returns single file\n  """\n  file(id: ID!): File!\n}\n\n\ninput FilesListFilter {\n  owner: ID\n  category: String\n  mimeType: String\n}\n\n"""\nFile adge bundle\n"""\ntype FilesEdge implements Edge {\n  node: File!\n  cursor: String!\n}\n\n"""\nPossible data to order list of files\n"""\ninput FilesOrderBy {\n  field: FilesOrderField!\n  direction: OrderDirection!\n}\n\n\n"""\nPossible data to sort of files list\n"""\nenum FilesOrderField {\n  category\n  mimeType\n  createdAt\n  updatedAt\n}\n\nenum FileType {\n  image\n  document\n}\n\n"""\nFiles list connection\n"""\ntype FilesListConnection implements Connection {\n  totalCount: Int!\n  pageInfo: PageInfo!\n  edges: [FilesEdge]!\n}\n\n\ntype File implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  owner: ID!\n  type: FileType!\n  category: String!\n  mimeType: String!\n  url: String!\n  description: String\n  metaData: JSON\n}\n\ntype Image implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  owner: ID!\n  type: FileType!\n  category: String!\n  mimeType: String!\n  url: String!\n  description: String\n  metaData: JSON\n}\n\ninput ImageTransformInput {\n  resize: ImageTransformInputResize\n  cover: ImageTransformInputCover\n  contain: ImageTransformInputContain\n  scaleToFit: ImageTransformInputScaleToFit\n  gaussian: Int\n  blur: Int\n  quality: Int\n  greyscale: Boolean\n}\n\ninput ImageTransformInputResize {\n  width: Int!\n  height: Int!\n}\n\ninput ImageTransformInputCover {\n  width: Int!\n  height: Int!\n}\n\ninput ImageTransformInputContain {\n  width: Int!\n  height: Int!\n}\n\ninput ImageTransformInputScaleToFit {\n  width: Int!\n  height: Int!\n}',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=i},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const t=i(32);i(33);const a=i(4),r=t.format.combine(t.format.metadata(),t.format.json(),t.format.timestamp({format:"YYYY-MM-DDTHH:mm:ssZZ"}),t.format.splat(),t.format.printf(e=>{const{timestamp:n,level:i,message:t,metadata:a}=e,r="{}"!==JSON.stringify(a)?a:null;return`${n} ${i}: ${t} ${r?JSON.stringify(r):""}`}));n.configureFileStorageLogger=e=>{const{logDir:n,logFilenamePattern:i}=e,o=i||a.LOG_FILENAME_FILES_STORAGE;return t.createLogger({level:"debug",format:r,transports:[new t.transports.DailyRotateFile({filename:`${n}/${o}`,level:"info",datePattern:a.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:a.LOG_MAZ_SIZE,maxFiles:a.LOG_MAZ_FILES}),new t.transports.DailyRotateFile({filename:`${n}/${a.LOG_FILENAME_ERRORS}`,level:"error",datePattern:a.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:a.LOG_MAZ_SIZE,maxFiles:a.LOG_MAZ_FILES}),new t.transports.DailyRotateFile({filename:`${n}/${a.LOG_FILENAME_DEBUG}`,level:"debug",datePattern:a.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:a.LOG_MAZ_SIZE,maxFiles:a.LOG_MAZ_FILES})]})},n.default=n.configureFileStorageLogger},function(e,n){e.exports=require("winston")},function(e,n){e.exports=require("winston-daily-rotate-file")}]);