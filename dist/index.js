/*!
 * 
 *  Via Profit Services / File Storage
 * 
 *  Repository https://gitlab.com/via-profit-services/file-storage
 *  Contact    promo@via-profit.ru
 *  Website    https://via-profit.ru
 *       
 */
module.exports=function(e){var i={};function t(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=e,t.c=i,t.d=function(e,i,n){t.o(e,i)||Object.defineProperty(e,i,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,i){if(1&i&&(e=t(e)),8&i)return e;if(4&i&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&i&&"string"!=typeof e)for(var a in e)t.d(n,a,function(i){return e[i]}.bind(null,a));return n},t.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(i,"a",i),i},t.o=function(e,i){return Object.prototype.hasOwnProperty.call(e,i)},t.p="",t(t.s=10)}([function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__rest||function(e,i){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&i.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)i.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(t[n[a]]=e[n[a]])}return t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const o=r(t(17)),l=r(t(8)),d=t(1),s=r(t(7)),u=r(t(18)),m=r(t(19)),p=r(t(20)),c=t(21),f=t(6),y=r(t(3)),v=t(4),k=t(2),g=t(5);class T{constructor(e){this.props=e}clearExpiredCacheFiles(){return n(this,void 0,void 0,(function*(){const{cacheAbsolutePath:e}=v.getParams(),{redis:i,logger:t}=this.props.context,a={allFiles:0,deletedFiles:0},r=yield i.hgetall(f.REDIS_CACHE_NAME);Object.entries(r).forEach(([r,d])=>n(this,void 0,void 0,(function*(){let n;a.allFiles+=1;try{n=JSON.parse(d)}catch(e){t.fileStorage.error("Cache clean. Failed to decode transform JSON",{err:e})}try{const{exp:t,filename:d}=n;if((new Date).getTime()>t){const t=l.default.resolve(e,d),n=l.default.dirname(t),s=l.default.resolve(n,"..");o.default.existsSync(t)&&(o.default.unlinkSync(t),i.hdel(f.REDIS_CACHE_NAME,r),a.deletedFiles+=1,o.default.readdirSync(n).length||o.default.rmdirSync(n),o.default.readdirSync(s).length||o.default.rmdirSync(s))}}catch(e){t.fileStorage.error("Cache clean. Failed to delete cache file",{err:e})}}))),a.allFiles>0?t.fileStorage.info(`Cache clean. Deleted ${a.deletedFiles} from ${a.allFiles}`):t.fileStorage.info("Cache clean. There are no files to delete")}))}clearExpiredTemporaryFiles(){return n(this,void 0,void 0,(function*(){const{temporaryAbsolutePath:e}=v.getParams(),{redis:i,logger:t}=this.props.context,a={allFiles:0,deletedFiles:0},r=yield i.hgetall(f.REDIS_TEMPORARY_NAME);Object.entries(r).forEach(([r,d])=>n(this,void 0,void 0,(function*(){let n;a.allFiles+=1;try{n=JSON.parse(d)}catch(e){t.fileStorage.error("Cache clean. Failed to decode transform JSON",{err:e})}try{const{exp:t,filename:d}=n;if((new Date).getTime()>t){const t=l.default.resolve(e,d),n=l.default.dirname(t),s=l.default.resolve(n,"..");o.default.existsSync(t)&&(o.default.unlinkSync(t),i.hdel(f.REDIS_TEMPORARY_NAME,r),a.deletedFiles+=1,o.default.readdirSync(n).length||o.default.rmdirSync(n),o.default.readdirSync(s).length||o.default.rmdirSync(s))}}catch(e){t.fileStorage.error("Temporary clean. Failed to delete temporary file",{err:e})}}))),a.allFiles>0?t.fileStorage.info(`Temporary clean. Deleted ${a.deletedFiles} from ${a.allFiles}`):t.fileStorage.info("Temporary clean. There are no files to delete")}))}clearCache(){return n(this,void 0,void 0,(function*(){const{cacheAbsolutePath:e,rootPath:i}=v.getParams(),{redis:t,logger:n}=this.props.context;e!==i&&o.default.existsSync(e)&&(yield t.del(f.REDIS_CACHE_NAME),p.default(e+"/*",e=>{e&&n.fileStorage.error("Failed to remove cache directory",{err:e})}),n.fileStorage.info(`Cache was cleared in «${e}»`))}))}clearTemporary(){return n(this,void 0,void 0,(function*(){const{logger:e}=this.props.context,{temporaryAbsolutePath:i,rootPath:t}=v.getParams();i!==t&&o.default.existsSync(i)&&(p.default(i+"/*",i=>{i&&e.fileStorage.error("Failed to remove cache directory",{err:i})}),e.fileStorage.info(`Cache was cleared in «${i}»`))}))}checkFileInCache(e){return n(this,void 0,void 0,(function*(){const{redis:i,logger:t}=this.props.context,n=yield i.hget(f.REDIS_CACHE_NAME,e);if(n)try{return JSON.parse(n)}catch(i){return t.fileStorage.error("Failed to parse payload",{err:i,imageDataHash:e}),null}return null}))}makeImageCache(e,i){return n(this,void 0,void 0,(function*(){const{redis:t}=this.props.context,{payload:n,token:a}=e,{cacheAbsolutePath:r}=v.getParams(),d=T.getPathFromUuid(c.v4()),s=l.default.join(r,d),u=`${s}.${n.ext}`,m=l.default.dirname(s);o.default.existsSync(m)||o.default.mkdirSync(m,{recursive:!0}),o.default.writeFileSync(u,i),yield t.hset(f.REDIS_CACHE_NAME,a,this.compilePayloadCache(n.id,u))}))}compilePayloadCache(e,i){const{cacheTTL:t}=v.getParams(),n={id:e,filename:i,exp:(new Date).getTime()+1e3*t};return JSON.stringify(n)}getUrlWithTransform(e,i){return n(this,void 0,void 0,(function*(){const{redis:t,logger:n}=this.props.context,{hostname:a,cacheDelimiter:r,staticPrefix:s,cacheAbsolutePath:u,storageAbsolutePath:m}=v.getParams(),{url:p,id:y,mimeType:g,isLocalFile:h}=e,N=T.getFileTypeByMimeType(g),F=T.getExtensionByMimeType(g),I={id:y,ext:F,transform:i};if(!h||N!==k.FileType.image)return p;const S=Buffer.from(JSON.stringify(I),"utf8").toString("base64"),_=yield this.checkFileInCache(S);if(_)return[`${a}${s}`,r,""+_.filename].join("/");const D=`${T.getPathFromUuid(y)}.${F}`,E=`${T.getPathFromUuid(c.v4())}.${F}`,A=l.default.join(m,D),b=l.default.join(u,E),x=l.default.dirname(b);if(!o.default.existsSync(A))throw new d.ServerError(`File ${D} with id ${y} not exists`);o.default.existsSync(x)||o.default.mkdirSync(x,{recursive:!0}),o.default.copyFileSync(A,b),t.hset(f.REDIS_CACHE_NAME,S,this.compilePayloadCache(y,E));try{this.applyTransform(b,i)}catch(e){n.fileStorage.error("Failed to apply transformation with file "+E,{err:e,transform:i})}return[`${a}${s}`,r,""+E].join("/")}))}static getPathFromUuid(e){return[e.substr(0,2),e.substr(2,2),e].join("/")}static resolveFile(e){const{mimeType:i,isLocalFile:t,url:n,id:a}=e;if(!t)return{resolveAbsolutePath:n,resolvePath:n};const{storagePath:r,storageAbsolutePath:o}=v.getParams(),d=g.FileStorage.getExtensionByMimeType(i),s=g.FileStorage.getPathFromUuid(a);return{resolvePath:l.default.join(r,`${s}.${d}`),resolveAbsolutePath:l.default.join(o,`${s}.${d}`)}}applyTransform(e,i){return n(this,void 0,void 0,(function*(){if(!o.default.existsSync(e)){const{logger:i}=this.props.context;return void i.fileStorage.error(`Transform error. File «${e}» not found`)}if(!o.default.readFileSync(e)){const{logger:i}=this.props.context;return void i.fileStorage.error(`Transform error. File «${e}» not readable`)}let t=yield s.default.read(e);Object.entries(i).forEach(([e,i])=>{if("resize"===e){const{w:e,h:n}=i;t=t.resize(Math.min(e,f.IMAGE_TRANSFORM_MAX_WITH),Math.min(n,f.IMAGE_TRANSFORM_MAX_HEIGHT))}if("cover"===e){const{w:e,h:n}=i;t=t.cover(Math.min(e,f.IMAGE_TRANSFORM_MAX_WITH),Math.min(n,f.IMAGE_TRANSFORM_MAX_HEIGHT))}if("contain"===e){const{w:e,h:n}=i;t=t.contain(Math.min(e,f.IMAGE_TRANSFORM_MAX_WITH),Math.min(n,f.IMAGE_TRANSFORM_MAX_HEIGHT))}if("scaleToFit"===e){const{w:e,h:n}=i;t=t.scaleToFit(Math.min(e,f.IMAGE_TRANSFORM_MAX_WITH),Math.min(n,f.IMAGE_TRANSFORM_MAX_HEIGHT))}if("gaussian"===e){const e=i;t=t.gaussian(Math.min(e,f.IMAGE_TRANSFORM_MAX_GAUSSIAN))}if("blur"===e){const e=i;t=t.blur(Math.min(e,f.IMAGE_TRANSFORM_MAX_BLUR))}if("greyscale"===e){!0===i&&(t=t.grayscale())}if("crop"===e){const{x:e,y:n,w:a,h:r}=i;t=t.crop(Math.min(e,f.IMAGE_TRANSFORM_MAX_WITH),Math.min(n,f.IMAGE_TRANSFORM_MAX_HEIGHT),Math.min(a,f.IMAGE_TRANSFORM_MAX_WITH),Math.min(r,f.IMAGE_TRANSFORM_MAX_HEIGHT))}}),yield t.writeAsync(e)}))}static getFilenameFromUuid(e,i="s"){const{storagePath:t,cachePath:n,temporaryPath:a,staticDelimiter:r,cacheDelimiter:o,temporaryDelimiter:d}=v.getParams(),s=T.getPathFromUuid(e);switch(i){case o:return l.default.join("/",n,s);case d:return l.default.join("/",a,s);case r:default:return l.default.join("/",t,s)}}static getStoragePath(){const{storagePath:e,storageAbsolutePath:i}=v.getParams();return{storagePath:e,storageAbsolutePath:i}}static getCachePath(){const{cachePath:e,cacheAbsolutePath:i}=v.getParams();return{cachePath:e,cacheAbsolutePath:i}}static getTemporaryPath(){const{temporaryPath:e,temporaryAbsolutePath:i}=v.getParams();return{temporaryPath:e,temporaryAbsolutePath:i}}static getFileTypeByMimeType(e){switch(e){case"image/tiff":case"image/png":case"image/jpeg":case"image/gif":case"image/svg":return k.FileType.image;default:return k.FileType.document}}static getExtensionByMimeType(e){return u.default.extension(e)||"txt"}static getMimeTypeByExtension(e){return u.default.lookup(e)||"text/plain"}static extractExtensionFromFilename(e){return e.split(".").pop()}static getMimeTypeByFilename(e){const i=T.extractExtensionFromFilename(e);return T.getMimeTypeByExtension(i)}static resolveMimeType(e,i){return T.extractExtensionFromFilename(e)===u.default.extension(i)?i:T.getMimeTypeByExtension(e)}getFileStream(e){return n(this,void 0,void 0,(function*(){const{id:i,absoluteFilename:t}=yield this.createFile(null,e),n=yield this.getFile(i);if(!n)throw new d.ServerError("Failed to create file stream");return{stream:o.default.createWriteStream(t),file:n}}))}getTemporaryFileStream(e){return n(this,void 0,void 0,(function*(){const{timezone:i}=this.props.context,{temporaryAbsolutePath:t,temporaryTTL:n}=v.getParams(),a=e.id||c.v4(),r=e.expireAt||n,s=g.FileStorage.getPathFromUuid(a),u=g.FileStorage.getExtensionByMimeType(e.mimeType),p=l.default.join(t,`${s}.${u}`);yield this.createTemporaryFile(null,{id:a,isLocalFile:!0,mimeType:e.mimeType,category:"temporary",type:k.FileType.document,owner:c.v4()},r);const f=yield this.getTemporaryFile(a);if(!f)throw new d.ServerError("Failed to create temporary file stream");return{stream:o.default.createWriteStream(p),file:f,expireAt:m.default.tz(i).add(r,"seconds").toDate()}}))}getTemporaryFile(e){return n(this,void 0,void 0,(function*(){const{redis:i,logger:t,timezone:n}=this.props.context,{temporaryAbsolutePath:a,hostname:r,temporaryDelimiter:d,staticPrefix:s}=v.getParams(),u=yield i.hget(f.REDIS_TEMPORARY_NAME,e);let p;try{p=JSON.parse(u)}catch(e){t.fileStorage.error("Failed to decode temporary data JSON",{err:e})}const c=l.default.join(a,p.filename);if(!o.default.existsSync(c))return!1;const{fileInfo:y}=p;return Object.assign({id:e,createdAt:m.default.tz(n).toDate(),updatedAt:m.default.tz(n).toDate(),url:`${r}${s}/${d}/${p.filename}`},y)}))}getFiles(e){return n(this,void 0,void 0,(function*(){const{context:i}=this.props,{knex:t}=i,{staticPrefix:n,hostname:r,staticDelimiter:o}=v.getParams(),{limit:l,offset:s,orderBy:u,where:m}=e,p=yield t.select(["*",t.raw('count(*) over() as "totalCount"')]).orderBy(d.convertOrderByToKnex(u)).from("fileStorage").limit(l||1).offset(s||0).where(e=>d.convertWhereToKnex(e,m)).orderBy(d.convertOrderByToKnex(u)).then(e=>({totalCount:e.length?Number(e[0].totalCount):0,nodes:e.map(e=>{var{totalCount:i,url:t}=e,l=a(e,["totalCount","url"]);return Object.assign(Object.assign({},l),{url:l.isLocalFile?`${r}${n}/${o}/${t}`:t})})})),{totalCount:c,nodes:f}=p;return{totalCount:c,nodes:f,where:m,orderBy:u,limit:l,offset:s}}))}getFilesByIds(e){return n(this,void 0,void 0,(function*(){const{nodes:i}=yield this.getFiles({where:[["id",d.TWhereAction.IN,e]],offset:0,limit:e.length});return i}))}getFile(e){return n(this,void 0,void 0,(function*(){const i=yield this.getFilesByIds([e]);return!!i.length&&i[0]}))}preparePayloadToSQL(e){const{timezone:i}=this.props.context,{metaData:t,createdAt:n,updatedAt:r}=e,o=a(e,["metaData","createdAt","updatedAt"]);return t&&(o.metaData=JSON.stringify(t)),n&&(o.createdAt=m.default.tz(n,i).format()),r&&(o.updatedAt=m.default.tz(r,i).format()),o}updateFile(e,i){return n(this,void 0,void 0,(function*(){const{knex:t,timezone:n}=this.props.context;return yield t("fileStorage").update(Object.assign(Object.assign({},this.preparePayloadToSQL(i)),{updatedAt:m.default.tz(n).format()})).where("id",e).returning("id")}))}createTemporaryFile(e,i,t){return n(this,void 0,void 0,(function*(){const{temporaryAbsolutePath:a,temporaryTTL:r}=v.getParams(),{redis:s}=this.props.context,u=i.id||c.v4(),m=T.getExtensionByMimeType(i.mimeType),p=T.getFileTypeByMimeType(i.mimeType),y=`${T.getPathFromUuid(u)}.${m}`,k=l.default.join(a,y),g=l.default.dirname(k),h=(new Date).getTime()+1e3*(t||r),N=u,F={id:u,filename:y,exp:h,fileInfo:Object.assign(Object.assign({},i),{type:p})};return new Promise(i=>{if(!o.default.existsSync(g))try{o.default.mkdirSync(g,{recursive:!0})}catch(e){throw new d.ServerError("Failed to create destination directory",{err:e})}const t=o.default.createWriteStream(k);t.on("close",()=>n(this,void 0,void 0,(function*(){yield s.hset(f.REDIS_TEMPORARY_NAME,N,JSON.stringify(F)),i({id:u,absoluteFilename:k})}))),e?e.pipe(t):t.end()})}))}compressImage(e){return n(this,void 0,void 0,(function*(){const{imageOptimMaxWidth:i,imageOptimMaxHeight:t}=v.getParams(),n=yield s.default.read(e);(n.getWidth()>i||n.getHeight()>t)&&(n.scaleToFit(i,t),n.writeAsync(e))}))}createFile(e,i){return n(this,void 0,void 0,(function*(){const{knex:t,timezone:a}=this.props.context,{storageAbsolutePath:r}=v.getParams(),s=i.id||c.v4(),u=T.getExtensionByMimeType(i.mimeType),p=`${T.getPathFromUuid(s)}.${u}`,f=i.isLocalFile||!i.url?p:i.url;try{yield t("fileStorage").insert(Object.assign(Object.assign({},this.preparePayloadToSQL(i)),{id:s,url:f,type:T.getFileTypeByMimeType(i.mimeType),createdAt:m.default.tz(a).format(),updatedAt:m.default.tz(a).format()})).returning("id")}catch(e){throw new d.ServerError("Failed to register file in Database",{err:e})}const y=l.default.join(r,p),k=l.default.dirname(y);return new Promise(i=>{if(!o.default.existsSync(k))try{o.default.mkdirSync(k,{recursive:!0})}catch(e){throw new d.ServerError("Failed to create destination directory",{err:e})}const t=o.default.createWriteStream(y);t.on("close",()=>n(this,void 0,void 0,(function*(){i({id:s,absoluteFilename:y})}))),e?e.pipe(t):t.end()})}))}moveFileFromTemporary(e){return n(this,void 0,void 0,(function*(){const{temporaryAbsolutePath:i}=v.getParams(),t=yield this.getTemporaryFile(e),n=g.FileStorage.getPathFromUuid(e);if(!t)throw new d.ServerError(`File ${e} does not have in temporary cache`);const a=g.FileStorage.getExtensionByMimeType(t.mimeType),r=l.default.join(i,`${n}.${a}`);if(!o.default.existsSync(r))throw new d.ServerError(`File ${e} not exists in path ${r}`);const s=o.default.createReadStream(r);return yield this.createFile(s,Object.assign(Object.assign({},t),{isLocalFile:!0}))}))}deleteFilesByOwner(e){return n(this,void 0,void 0,(function*(){const{context:i}=this.props,t=y.default(i),n=Array.isArray(e)?e:[e],a=(yield this.getFiles({where:[["owner",d.TWhereAction.IN,n]]})).nodes.map(e=>e.id);if(a.length){const e=yield this.deleteStaticFiles(a);return e.forEach(e=>{t.files.clear(e)}),e}return!1}))}deleteStaticFiles(e){return n(this,void 0,void 0,(function*(){const{context:i}=this.props,{knex:t}=i,n=yield this.getFilesByIds(e),{staticDelimiter:a,rootPath:r}=v.getParams();return n.length&&n.forEach(e=>{if(e.isLocalFile||e.url.match(/^\/[a-z0-9]+/i)){const i=g.FileStorage.getFilenameFromUuid(e.id,a),t=g.FileStorage.getExtensionByMimeType(e.mimeType),n=l.default.resolve(r,`${i}.${t}`),s=l.default.dirname(i),u=l.default.resolve(s,"..");try{o.default.existsSync(n)&&(o.default.unlinkSync(n),o.default.readdirSync(s).length||o.default.rmdirSync(s),o.default.readdirSync(u).length||o.default.rmdirSync(u))}catch(i){throw new d.ServerError(`\n              Failed to delete file ${e.id} in path ${n}`,{err:i})}}}),yield t("fileStorage").del().whereIn("id",e).returning("id")}))}}i.FileStorageService=T,i.default=T},function(e,i){e.exports=require("@via-profit-services/core")},function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),function(e){e.image="image",e.document="document",e.template="template"}(i.FileType||(i.FileType={}))},function(e,i,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const a=t(1),r=n(t(0)),o={files:null};i.default=function(e){if(null!==o.files)return o;const i=new r.default({context:e});return o.files=new a.DataLoader(e=>i.getFilesByIds(e).then(i=>a.collateForDataloader(e,i))),o}},function(e,i,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const a=n(t(8)),r=t(6),o=a.default.resolve(a.default.dirname(process.argv[1])),l={params:{storagePath:r.DEFAULT_STORAGE_PATH,cachePath:r.DEFAULT_CACHE_PATH,temporaryPath:r.DEFAULT_TEMPORARY_PATH,staticPrefix:r.DEFAULT_STATIC_PREFIX,cacheTTL:r.CACHE_FILES_DEFAULT_TTL,temporaryTTL:r.TEMPORARY_FILES_DEFAULT_TTL,imageOptimMaxWidth:r.DEFAULT_IMAGE_OPTIM_MAX_WIDTH,imageOptimMaxHeight:r.DEFAULT_IMAGE_OPTIM_MAX_HEIGHT,staticDelimiter:r.DEFAULT_STATIC_DELIMITER,cacheDelimiter:r.DEFAULT_CACHE_DELIMITER,temporaryDelimiter:r.DEFAULT_TEMPORARY_DELIMITER,rootPath:o,hostname:"",staticPrefixAbsolutePath:"",storageAbsolutePath:"",cacheAbsolutePath:"",temporaryAbsolutePath:"",compressionOptions:{mozJpeg:{quality:70},pngQuant:{quality:[.8,.8]},optiPng:{optimizationLevel:3}}}};i.setParams=e=>{l.params=Object.assign(Object.assign({},l.params),e),l.params.cacheTTL=Math.min(r.TIMEOUT_MAX_VALUE/1e3,l.params.cacheTTL||r.CACHE_FILES_DEFAULT_TTL),l.params.temporaryTTL=Math.min(r.TIMEOUT_MAX_VALUE/1e3,l.params.temporaryTTL||r.TEMPORARY_FILES_DEFAULT_TTL),l.params=Object.assign(Object.assign({},l.params),{staticPrefixAbsolutePath:a.default.resolve(o,l.params.staticPrefix),storageAbsolutePath:a.default.resolve(o,l.params.storagePath),cacheAbsolutePath:a.default.resolve(o,l.params.cachePath),temporaryAbsolutePath:a.default.resolve(o,l.params.temporaryPath)})},i.getParams=()=>l.params,i.default=l},function(e,i,t){"use strict";function n(e){for(var t in e)i.hasOwnProperty(t)||(i[t]=e[t])}var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=a(t(12));i.makeSchema=r.default;const o=a(t(0));i.FileStorage=o.default,n(t(2)),n(t(33))},function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const n=t(1);i.LOG_MAZ_FILES=n.LOG_MAZ_FILES,i.LOG_MAZ_SIZE=n.LOG_MAZ_SIZE,i.LOG_DATE_PATTERNT=n.LOG_DATE_PATTERNT,i.LOG_FILENAME_DEBUG=n.LOG_FILENAME_DEBUG,i.LOG_FILENAME_ERRORS=n.LOG_FILENAME_ERRORS,i.TIMEOUT_MAX_VALUE=2147483647,i.REDIS_CACHE_NAME="fileStorageCache",i.REDIS_TEMPORARY_NAME="fileStorageTemporary",i.CACHE_FILES_DEFAULT_TTL=86400,i.TEMPORARY_FILES_DEFAULT_TTL=86400,i.DEFAULT_IMAGE_OPTIM_MAX_WIDTH=1200,i.DEFAULT_IMAGE_OPTIM_MAX_HEIGHT=800,i.DEFAULT_STORAGE_PATH="./public/fileStorage/files",i.DEFAULT_CACHE_PATH="./public/fileStorage/cache",i.DEFAULT_TEMPORARY_PATH="./public/fileStorage/temp",i.DEFAULT_STATIC_PREFIX="/static",i.DEFAULT_HOSTNAME="http://localhost:80",i.DEFAULT_STATIC_DELIMITER="s",i.DEFAULT_CACHE_DELIMITER="c",i.DEFAULT_TEMPORARY_DELIMITER="t",i.LOG_FILENAME_FILES_STORAGE="file-storage-%DATE%.log",i.IMAGE_TRANSFORM_MAX_WITH=3e3,i.IMAGE_TRANSFORM_MAX_HEIGHT=3e3,i.IMAGE_TRANSFORM_MAX_BLUR=20,i.IMAGE_TRANSFORM_MAX_GAUSSIAN=20},function(e,i){e.exports=require("jimp")},function(e,i){e.exports=require("path")},function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0});i.default=class{constructor(){this.promise=new Promise((e,i)=>{this.resolve=i=>{this.file=i,e(i)},this.reject=i}),this.promise.catch(()=>{})}}},function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0}),function(e){for(var t in e)i.hasOwnProperty(t)||(i[t]=e[t])}(t(11))},function(e,i,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const a=n(t(7));i.Jimp=a.default,function(e){for(var t in e)i.hasOwnProperty(t)||(i[t]=e[t])}(t(5))},function(e,i,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)Object.hasOwnProperty.call(e,t)&&(i[t]=e[t]);return i.default=e,i};Object.defineProperty(i,"__esModule",{value:!0});const r=n(t(13)),o=t(4),l=n(t(22)),d=a(t(32));i.makeSchema=e=>{o.setParams(e);const i=r.default(o.getParams());return{typeDefs:d,resolvers:l.default,expressMiddleware:i}},i.default=i.makeSchema},function(e,i,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const a=t(1),r=t(4),o=n(t(14));i.default=e=>i=>{const t=i.context,{staticPrefix:n}=e,{logger:l,endpoint:d}=t,{storageAbsolutePath:s,staticDelimiter:u,cacheAbsolutePath:m,cacheDelimiter:p,temporaryAbsolutePath:c,temporaryDelimiter:f}=r.getParams(),y=a.Express.Router();return y.use(d,o.default({context:t})),y.use(`${n}/${u}`,a.Express.static(s)),l.fileStorage.info(`Registered static directory in «${s}» with static prefix «${n}»`),y.use(`${n}/${p}`,a.Express.static(m)),l.fileStorage.info(`Registered static cache directory in «${m}»`),y.use(`${n}/${f}`,a.Express.static(c)),l.fileStorage.info(`Registered static temporary directory in «${c}»`),y}},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=t(1),o=a(t(15)),l=t(16),d=a(t(9)),s=t(4),u=a(t(0));let m,p;i.default=e=>{const{context:i,limits:t}=e,{cacheTTL:a,temporaryTTL:c}=s.getParams(),{logger:f}=i,y=new u.default({context:i});return y.clearExpiredCacheFiles(),f.fileStorage.info(`A timer is set for clearing the cache for ${a} sec.`),clearInterval(m),m=setInterval(()=>{y.clearExpiredCacheFiles()},1e3*a),y.clearExpiredTemporaryFiles(),f.fileStorage.info(`A timer is set for clearing the temporary for ${c} sec.`),clearInterval(p),p=setInterval(()=>{y.clearExpiredTemporaryFiles()},1e3*c),(e,i,a)=>n(void 0,void 0,void 0,(function*(){if(!e.is("multipart/form-data"))return void a();const n=new Promise(i=>e.on("end",i)),{send:s}=i;i.send=(...e)=>{n.then(()=>{i.send=s,i.send(...e)})};const u={maxFieldSize:64e6,maxFileSize:1/0,maxFiles:1/0},m=new o.default({headers:e.headers,limits:Object.assign(Object.assign({fields:2},u),t)}),p=new Map;let c=null;m.on("field",(i,n,o,l)=>{if(l)throw f.fileStorage.error(`The ‘${i}’ multipart field value exceeds the ${t.maxFieldSize} byte size limit.`),new r.ServerError(`The ‘${i}’ multipart field value exceeds the ${t.maxFieldSize} byte size limit.`);if("operations"===i)try{c=JSON.parse(n)}catch(e){throw f.fileStorage.error("Invalid JSON in the «operations» multipart field"),new r.ServerError("Invalid JSON in the «operations» multipart field")}if("map"===i){try{const e=JSON.parse(n);Object.entries(e).forEach(([e])=>{p.set(Number(e),new d.default)})}catch(e){throw f.fileStorage.error("Invalid JSON in the «map» field"),new r.ServerError("Invalid JSON in the «map» field")}try{c.variables.files=c.variables.files.map((e,i)=>{const t=p.get(i);if(!t)throw f.fileStorage.error(`Can't assing file with index «${i}»`),new r.ServerError(`Can't assing file with index «${i}»`);return t})}catch(e){throw f.fileStorage.error("Can't assing file from variables",{err:e}),new r.ServerError("Can't assing file from variables")}e.body=c,a()}}),m.on("file",(e,i,n,a,o)=>{const d=p.get(Number(e));if(!d)throw f.fileStorage.error(`File from field «${e}» are not registered in map field`),new r.ServerError(`File from field «${e}» are not registered in map field`);const s=new l.WriteStream;s.on("error",()=>{i.unpipe(),i.resume()}),i.on("limit",()=>{throw f.fileStorage.error(`File truncated as it exceeds the ${t.maxFileSize} byte size limit.`),new r.ServerError(`File truncated as it exceeds the ${t.maxFileSize} byte size limit.`)}),i.on("error",e=>{i.unpipe(),s.destroy(new r.ServerError("Upload error",{error:e}))});const u={filename:n,mimeType:o,encoding:a,capacitor:s,createReadStream:e=>s.createReadStream(e)};Object.defineProperty(u,"capacitor",{value:s}),i.pipe(s),d.resolve(u)}),m.once("filesLimit",()=>{throw f.fileStorage.error(t.maxFiles+" max file uploads exceeded."),new r.ServerError(t.maxFiles+" max file uploads exceeded.")}),m.once("finish",()=>{if(e.unpipe(m),e.resume(),null===c)throw f.fileStorage.error("Missing multipart field «operations»"),new r.ServerError("Missing multipart field «operations»");if(!p.size)throw f.fileStorage.error("Missing multipart field «map»"),new r.ServerError("Missing multipart field «map»")}),m.once("error",e=>{throw f.fileStorage.error("Unknown error",e),new r.ServerError("Unknown error",e)}),e.pipe(m)}))}},function(e,i){e.exports=require("busboy")},function(e,i){e.exports=require("fs-capacitor")},function(e,i){e.exports=require("fs")},function(e,i){e.exports=require("mime-types")},function(e,i){e.exports=require("moment-timezone")},function(e,i){e.exports=require("rimraf")},function(e,i){e.exports=require("uuid")},function(e,i,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const a=n(t(23)),r=n(t(25)),o=n(t(26)),l=n(t(27)),d=n(t(28)),s=n(t(29)),u=n(t(30)),m=n(t(31)),p={Query:{fileStorage:()=>({})},Mutation:{fileStorage:()=>({})},FileStorageQuery:{list:d.default,file:(e,i)=>i},FileStorageMutation:{upload:u.default,delete:o.default,update:s.default,uploadTemporary:m.default,applyTemporary:r.default},File:l.default,FileUpload:a.default};i.default=p},function(e,i,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const a=t(24),r=n(t(9)),o=new a.GraphQLScalarType({name:"FileUpload",description:"The `Upload` scalar type represents a file upload.",parseValue(e){if(e instanceof r.default)return e.promise;throw new a.GraphQLError("Upload value invalid")},parseLiteral(e){throw new a.GraphQLError("Upload literal unsupported",e)},serialize(){throw new a.GraphQLError("Upload serialization unsupported")}});i.default=o},function(e,i){e.exports=require("graphql")},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=t(1),o=a(t(0));i.default=(e,i,t)=>n(void 0,void 0,void 0,(function*(){const{ids:e,info:a}=i,l=new o.default({context:t});return yield e.reduce((e,i,t)=>n(void 0,void 0,void 0,(function*(){yield e;try{yield l.moveFileFromTemporary(i)}catch(e){throw new r.ServerError("Failed to move uploaded file",{err:e,id:i})}if(a&&a[t])try{yield l.updateFile(i,a[t])}catch(e){throw new r.ServerError("Failed to update file info",{err:e,id:i})}})),Promise.resolve()),e.map(e=>({id:e}))}))},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=t(1),o=a(t(3)),l=a(t(0));i.default=(e,i,t)=>n(void 0,void 0,void 0,(function*(){const{ids:e,owners:n}=i,{logger:a,token:d}=t,{uuid:s}=d,u=new l.default({context:t}),m=o.default(t);let p=[];if(e&&Array.isArray(e))try{a.fileStorage.debug(`Will be deleted ${e.length} file(s)`,{uuid:s}),p=yield u.deleteStaticFiles(e)}catch(e){throw a.fileStorage.error("Failed to Delete files",{err:e,uuid:s}),new r.ServerError("Failed to Delete files",{err:e,uuid:s})}if(n&&Array.isArray(n)){const e=(yield u.getFiles({where:[["owner",r.TWhereAction.IN,n]]})).nodes.map(e=>e.id);if(e.length)try{a.fileStorage.debug(`Will be deleted ${e} file(s)`,{uuid:s}),p=yield u.deleteStaticFiles(e)}catch(e){throw new r.ServerError("Failed to Delete files",{err:e,uuid:s})}}return p.forEach(e=>{m.files.clear(e),a.fileStorage.debug(`File ${e} was deleted. Initiator: Account ${s}`)}),!0}))},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=a(t(3)),o=a(t(0)),l=t(2),d=new Proxy({id:()=>({}),createdAt:()=>({}),updatedAt:()=>({}),owner:()=>({}),category:()=>({}),mimeType:()=>({}),url:()=>({}),type:()=>({}),description:()=>({}),metaData:()=>({})},{get:(e,i)=>(e,t,a)=>n(void 0,void 0,void 0,(function*(){const{id:t,transform:n,isTemporary:d}=e,s=new o.default({context:a});let u;if(d)u=yield s.getTemporaryFile(t);else{const e=r.default(a);u=yield e.files.load(t)}return u?u.type===l.FileType.image&&"url"===i&&n?s.getUrlWithTransform(u,n):u[i]:null}))});i.default=d},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=t(1),o=a(t(3)),l=a(t(0));i.default=(e,i,t)=>n(void 0,void 0,void 0,(function*(){const{transform:e}=i,{logger:n}=t,a=r.buildQueryFilter(i),d=new l.default({context:t}),s=o.default(t);try{const i=yield d.getFiles(a),t=r.buildCursorConnection(i,"files");return e&&(t.edges=t.edges.map(({node:i,cursor:t})=>({cursor:t,node:Object.assign(Object.assign({},i),{transform:e})}))),i.nodes.forEach(e=>{s.files.clear(e.id).prime(e.id,e)}),t}catch(e){throw n.fileStorage.error("Failed to get Files list",{err:e}),new r.ServerError("Failed to get Files list",{err:e})}}))},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__rest||function(e,i){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&i.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)i.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(t[n[a]]=e[n[a]])}return t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const o=t(1),l=t(5),d=r(t(3)),s=r(t(0)),u=t(2);i.default=(e,i,t)=>n(void 0,void 0,void 0,(function*(){const{info:e,transform:r}=i,m=new s.default({context:t}),p=d.default(t);return yield e.reduce((e,i,t)=>n(void 0,void 0,void 0,(function*(){yield e;const{id:n}=i,d=a(i,["id"]),s=yield m.getFile(n);if(!s)throw new o.ServerError(`File with id ${n} not found`);p.files.clear(n);try{yield m.updateFile(n,d)}catch(e){throw new o.ServerError("Failed to update file info",{err:e,id:n})}if(r&&r[t]&&s.type===u.FileType.image)try{const{resolveAbsolutePath:e}=l.FileStorage.resolveFile(s);yield m.applyTransform(e,r[t])}catch(e){throw new o.ServerError("Failed to apply transformations",{err:e,id:n})}})),Promise.resolve()),e.map(e=>({id:e.id}))}))},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=a(t(0)),o=t(2);i.default=(e,i,t)=>n(void 0,void 0,void 0,(function*(){const{files:e,info:a,noCompress:l,transform:d}=i,{logger:s,token:u}=t,{uuid:m}=u,p=new r.default({context:t}),c=(yield Promise.all(e)).map((e,i)=>n(void 0,void 0,void 0,(function*(){const{createReadStream:t,mimeType:n,filename:u}=e,c=t(),f=Object.assign({mimeType:r.default.resolveMimeType(u,n),isLocalFile:!0,owner:null,description:"",metaData:null},a[i]),y=r.default.getFileTypeByMimeType(f.mimeType),{id:v,absoluteFilename:k}=yield p.createFile(c,f);return s.fileStorage.info(`File «${u}» uploaded successfully as «${k}»`,{uuid:m,mimeType:n}),d&&d[i]&&y===o.FileType.image&&(yield p.applyTransform(k,d[i])),!1===Boolean(l)&&y===o.FileType.image&&(yield p.compressImage(k)),{id:v}})));return Promise.all(c)}))},function(e,i,t){"use strict";var n=this&&this.__awaiter||function(e,i,t,n){return new(t||(t=Promise))((function(a,r){function o(e){try{d(n.next(e))}catch(e){r(e)}}function l(e){try{d(n.throw(e))}catch(e){r(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,l)}d((n=n.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const r=a(t(0)),o=t(2);i.default=(e,i,t)=>n(void 0,void 0,void 0,(function*(){const{files:e,info:a,noCompress:l,transform:d}=i,{logger:s,token:u}=t,{uuid:m}=u,p=new r.default({context:t}),c=(yield Promise.all(e)).map((e,i)=>n(void 0,void 0,void 0,(function*(){const{createReadStream:t,mimeType:n,filename:u}=e,c=t(),f=Object.assign({mimeType:r.default.resolveMimeType(u,n),isLocalFile:!0},a[i]),y=r.default.getFileTypeByMimeType(f.mimeType),{id:v,absoluteFilename:k}=yield p.createTemporaryFile(c,f);return d&&d[i]&&y===o.FileType.image&&(yield p.applyTransform(k,d[i])),!1===Boolean(l)&&y===o.FileType.image&&(yield p.compressImage(k)),s.fileStorage.info(`Temporary file «${u}» uploaded successfully as «${k}»`,{uuid:m,mimeType:n}),{id:v,isTemporary:!0}})));return Promise.all(c)}))},function(e,i){var t={kind:"Document",definitions:[{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Query"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"fileStorage"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileStorageQuery"}}},directives:[]}]},{kind:"ObjectTypeExtension",name:{kind:"Name",value:"Mutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"fileStorage"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileStorageMutation"}}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"FileStorageMutation"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Delete files by IDs",block:!0},name:{kind:"Name",value:"delete"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"ids"},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"owners"},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Upload files",block:!0},name:{kind:"Name",value:"upload"},arguments:[{kind:"InputValueDefinition",description:{kind:"StringValue",value:'GraphQL multipart request specification: https://github.com/jaydenseric/graphql-multipart-request-spec#graphql-multipart-request-specification\nFor example `curl` request will be:\ncurl localhost:9000/graphql \\\n-F operations=\'{ "query": "mutation($files: [FileUpload!]! $info: [FileUploadInfo!]!) { multipleUpload(files: $files info: $info) { id url } }", "variables": { "files": [null, null] }, "info": [{"owner": "xxxx-xxx-xxx", "category": "other"}, {"owner": "xxxx-xxx-xxx", "category": "other"}] }\' \\\n-F map=\'{ "0": ["variables.files.0"], "1": ["variables.files.1"] }\' \\\n-F 0=@b.txt \\\n-F 1=@c.txt',block:!0},name:{kind:"Name",value:"files"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUpload"}}}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"info"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUploadInfo"}}}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images and only for local images\nImage transform options",block:!0},name:{kind:"Name",value:"transform"},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInput"}}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images and only for local images\nIf true, the image will not be compressed\nIf transform is used then props noCompress will be true permanently",block:!0},name:{kind:"Name",value:"noCompress"},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Upload the file temporarily. When the specified time limit (TTL) expires the file will be deleted",block:!0},name:{kind:"Name",value:"uploadTemporary"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"files"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUpload"}}}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"info"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUploadInfo"}}}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images and only for local images\nImage transform options",block:!0},name:{kind:"Name",value:"transform"},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInput"}}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images and only for local images\nIf true, the image will not be compressed\nIf transform is used then props noCompress will be true permanently",block:!0},name:{kind:"Name",value:"noCompress"},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Move your data from temporary directory into the permanent state",block:!0},name:{kind:"Name",value:"applyTemporary"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"ids"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"info"},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUpdateInfo"}}}},directives:[]}],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Update existings file info",block:!0},name:{kind:"Name",value:"update"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"info"},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileUpdateInfo"}}}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images and only for local images\nImage transform options",block:!0},name:{kind:"Name",value:"transform"},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInput"}}}},directives:[]}],type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}}},directives:[]}]},{kind:"InputObjectTypeDefinition",description:{kind:"StringValue",value:"Information about uploaded file",block:!0},name:{kind:"Name",value:"FileUploadInfo"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Your file owner",block:!0},name:{kind:"Name",value:"owner"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Voluntary name of category",block:!0},name:{kind:"Name",value:"category"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Description of this file",block:!0},name:{kind:"Name",value:"description"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Voluntary metadata of this file (e.g. title, alt for images)",block:!0},name:{kind:"Name",value:"metaData"},type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"FileUpdateInfo"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Your file owner",block:!0},name:{kind:"Name",value:"owner"},type:{kind:"NamedType",name:{kind:"Name",value:"ID"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Voluntary name of category",block:!0},name:{kind:"Name",value:"category"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Description of this file",block:!0},name:{kind:"Name",value:"description"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Voluntary metadata of this file (e.g. title, alt for images)",block:!0},name:{kind:"Name",value:"metaData"},type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"FileStorageQuery"},interfaces:[],directives:[],fields:[{kind:"FieldDefinition",description:{kind:"StringValue",value:"Returns Files list bundle",block:!0},name:{kind:"Name",value:"list"},arguments:[{kind:"InputValueDefinition",name:{kind:"Name",value:"first"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"offset"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"after"},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"orderBy"},type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesOrderBy"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"filter"},type:{kind:"NamedType",name:{kind:"Name",value:"FilesListFilter"}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images and only for local images\nImage transform options",block:!0},name:{kind:"Name",value:"transform"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInput"}},directives:[]}],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesListConnection"}}},directives:[]},{kind:"FieldDefinition",description:{kind:"StringValue",value:"Returns single file",block:!0},name:{kind:"Name",value:"file"},arguments:[{kind:"InputValueDefinition",description:{kind:"StringValue",value:"File ID",block:!0},name:{kind:"Name",value:"id"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",description:{kind:"StringValue",value:"Only for images and only for local images\nImage transform options",block:!0},name:{kind:"Name",value:"transform"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInput"}},directives:[]}],type:{kind:"NamedType",name:{kind:"Name",value:"File"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"FilesListFilter"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"id"},type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"owner"},type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"category"},type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"mimeType"},type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"type"},type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"FileType"}}},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"File adge bundle",block:!0},name:{kind:"Name",value:"FilesEdge"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Edge"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"node"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"File"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"cursor"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",description:{kind:"StringValue",value:"Possible data to order list of files",block:!0},name:{kind:"Name",value:"FilesOrderBy"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"field"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesOrderField"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"direction"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"OrderDirection"}}},directives:[]}]},{kind:"EnumTypeDefinition",description:{kind:"StringValue",value:"Possible data to sort of files list",block:!0},name:{kind:"Name",value:"FilesOrderField"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"category"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"mimeType"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"createdAt"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"updatedAt"},directives:[]}]},{kind:"EnumTypeDefinition",name:{kind:"Name",value:"FileType"},directives:[],values:[{kind:"EnumValueDefinition",name:{kind:"Name",value:"image"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"document"},directives:[]},{kind:"EnumValueDefinition",name:{kind:"Name",value:"template"},directives:[]}]},{kind:"ObjectTypeDefinition",description:{kind:"StringValue",value:"Files list connection",block:!0},name:{kind:"Name",value:"FilesListConnection"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"Connection"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"totalCount"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"pageInfo"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PageInfo"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"edges"},arguments:[],type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"FilesEdge"}}}},directives:[]}]},{kind:"InterfaceTypeDefinition",name:{kind:"Name",value:"FileNode"},directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"createdAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"updatedAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"owner"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileType"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"category"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"mimeType"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"url"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"URL"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"description"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"metaData"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]},{kind:"ObjectTypeDefinition",name:{kind:"Name",value:"File"},interfaces:[{kind:"NamedType",name:{kind:"Name",value:"FileNode"}},{kind:"NamedType",name:{kind:"Name",value:"Node"}}],directives:[],fields:[{kind:"FieldDefinition",name:{kind:"Name",value:"id"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"createdAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"updatedAt"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DateTime"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"owner"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"type"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"FileType"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"category"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"mimeType"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"url"},arguments:[],type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"URL"}}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"description"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"FieldDefinition",name:{kind:"Name",value:"metaData"},arguments:[],type:{kind:"NamedType",name:{kind:"Name",value:"JSON"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInput"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"resize"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputResize"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"cover"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputCover"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"contain"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputContain"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"scaleToFit"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputScaleToFit"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"crop"},type:{kind:"NamedType",name:{kind:"Name",value:"ImageTransformInputCrop"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"gaussian"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"blur"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"quality"},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"greyscale"},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputResize"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"w"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"h"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputCover"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"w"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"h"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputContain"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"w"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"h"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputScaleToFit"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"w"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"h"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"InputObjectTypeDefinition",name:{kind:"Name",value:"ImageTransformInputCrop"},directives:[],fields:[{kind:"InputValueDefinition",name:{kind:"Name",value:"w"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"h"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"x"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"InputValueDefinition",name:{kind:"Name",value:"y"},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}]},{kind:"ScalarTypeDefinition",description:{kind:"StringValue",value:"A GraphQL `FileUpload` scalar as specified GraphQL multipart request specification: https://github.com/jaydenseric/graphql-multipart-request-spec#graphql-multipart-request-specification",block:!0},name:{kind:"Name",value:"FileUpload"},directives:[]}],loc:{start:0,end:5274}};t.loc.source={body:'\nextend type Query {\n  fileStorage: FileStorageQuery!\n}\n\nextend type Mutation {\n  fileStorage: FileStorageMutation!\n}\n\ntype FileStorageMutation {\n  """\n  Delete files by IDs\n  """\n  delete(ids: [ID!] owners: [ID!]): Boolean\n  \n  """\n  Upload files\n  """\n  upload(\n    """\n    GraphQL multipart request specification: https://github.com/jaydenseric/graphql-multipart-request-spec#graphql-multipart-request-specification\n    For example `curl` request will be:\n    curl localhost:9000/graphql \\\n    -F operations=\'{ "query": "mutation($files: [FileUpload!]! $info: [FileUploadInfo!]!) { multipleUpload(files: $files info: $info) { id url } }", "variables": { "files": [null, null] }, "info": [{"owner": "xxxx-xxx-xxx", "category": "other"}, {"owner": "xxxx-xxx-xxx", "category": "other"}] }\' \\\n    -F map=\'{ "0": ["variables.files.0"], "1": ["variables.files.1"] }\' \\\n    -F 0=@b.txt \\\n    -F 1=@c.txt\n    """\n    files: [FileUpload!]!\n    info: [FileUploadInfo!]!\n    """\n    Only for images and only for local images\n    Image transform options\n    """\n    transform: [ImageTransformInput!]\n    """\n    Only for images and only for local images\n    If true, the image will not be compressed\n    If transform is used then props noCompress will be true permanently\n    """\n    noCompress: Boolean\n\n  ): [File!]\n\n  """\n  Upload the file temporarily. When the specified time limit (TTL) expires the file will be deleted\n  """\n  uploadTemporary (\n    files: [FileUpload!]!\n    info: [FileUploadInfo!]!\n    """\n    Only for images and only for local images\n    Image transform options\n    """\n    transform: [ImageTransformInput!]\n    """\n    Only for images and only for local images\n    If true, the image will not be compressed\n    If transform is used then props noCompress will be true permanently\n    """\n    noCompress: Boolean\n  ): [File!]\n\n  """\n  Move your data from temporary directory into the permanent state\n  """\n  applyTemporary (\n    ids: [ID!]!\n    info: [FileUpdateInfo!]\n  ): [File!]\n\n  """\n  Update existings file info\n  """\n  update (\n    info: [FileUpdateInfo!]!\n    """\n    Only for images and only for local images\n    Image transform options\n    """\n    transform: [ImageTransformInput!]\n  ): [File!]\n}\n\n"""\nInformation about uploaded file\n"""\ninput FileUploadInfo {\n  id: ID\n\n  """\n  Your file owner\n  """\n  owner: ID!\n\n  """\n  Voluntary name of category\n  """\n  category: String!\n\n  """\n  Description of this file\n  """\n  description: String\n\n  """\n  Voluntary metadata of this file (e.g. title, alt for images)\n  """\n  metaData: JSON\n}\n\ninput FileUpdateInfo {\n  id: ID!\n\n  """\n  Your file owner\n  """\n  owner: ID\n\n  """\n  Voluntary name of category\n  """\n  category: String\n\n  """\n  Description of this file\n  """\n  description: String\n\n  """\n  Voluntary metadata of this file (e.g. title, alt for images)\n  """\n  metaData: JSON\n}\n\ntype FileStorageQuery {\n  """\n  Returns Files list bundle\n  """\n  list(\n    first: Int\n    offset: Int\n    after: String\n    orderBy: [FilesOrderBy]\n    filter: FilesListFilter\n\n    """\n    Only for images and only for local images\n    Image transform options\n    """\n    transform: ImageTransformInput\n  ): FilesListConnection!\n\n  """\n  Returns single file\n  """\n  file(\n    """\n    File ID\n    """\n    id: ID!\n    \n    """\n    Only for images and only for local images\n    Image transform options\n    """\n    transform: ImageTransformInput\n  ): File\n}\n\n\ninput FilesListFilter {\n  id: [ID]\n  owner: [ID]\n  category: [String]\n  mimeType: [String]\n  type: [FileType]\n}\n\n"""\nFile adge bundle\n"""\ntype FilesEdge implements Edge {\n  node: File!\n  cursor: String!\n}\n\n"""\nPossible data to order list of files\n"""\ninput FilesOrderBy {\n  field: FilesOrderField!\n  direction: OrderDirection!\n}\n\n\n"""\nPossible data to sort of files list\n"""\nenum FilesOrderField {\n  category\n  mimeType\n  createdAt\n  updatedAt\n}\n\nenum FileType {\n  image\n  document\n  template\n}\n\n"""\nFiles list connection\n"""\ntype FilesListConnection implements Connection {\n  totalCount: Int!\n  pageInfo: PageInfo!\n  edges: [FilesEdge]!\n}\n\ninterface FileNode {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  owner: ID!\n  type: FileType!\n  category: String!\n  mimeType: String!\n  url: URL!\n  description: String\n  metaData: JSON\n}\n\n\ntype File implements FileNode & Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  owner: ID!\n  type: FileType!\n  category: String!\n  mimeType: String!\n  url: URL!\n  description: String\n  metaData: JSON\n}\n\n\n\ninput ImageTransformInput {\n  resize: ImageTransformInputResize\n  cover: ImageTransformInputCover\n  contain: ImageTransformInputContain\n  scaleToFit: ImageTransformInputScaleToFit\n  crop: ImageTransformInputCrop\n  gaussian: Int\n  blur: Int\n  quality: Int\n  greyscale: Boolean\n}\n\ninput ImageTransformInputResize {\n  w: Int!\n  h: Int!\n}\n\ninput ImageTransformInputCover {\n  w: Int!\n  h: Int!\n}\n\ninput ImageTransformInputContain {\n  w: Int!\n  h: Int!\n}\n\ninput ImageTransformInputScaleToFit {\n  w: Int!\n  h: Int!\n}\n\ninput ImageTransformInputCrop {\n  w: Int!\n  h: Int!\n  x: Int!\n  y: Int!\n}\n\n"""\nA GraphQL `FileUpload` scalar as specified GraphQL multipart request specification: https://github.com/jaydenseric/graphql-multipart-request-spec#graphql-multipart-request-specification\n"""\nscalar FileUpload',name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const n=t(34);t(35);const a=t(6),r=n.format.combine(n.format.metadata(),n.format.json(),n.format.timestamp({format:"YYYY-MM-DDTHH:mm:ssZZ"}),n.format.splat(),n.format.printf(e=>{const{timestamp:i,level:t,message:n,metadata:a}=e,r="{}"!==JSON.stringify(a)?a:null;return`${i} ${t}: ${n} ${r?JSON.stringify(r):""}`}));i.configureFileStorageLogger=e=>{const{logDir:i,logFilenamePattern:t}=e,o=t||a.LOG_FILENAME_FILES_STORAGE;return n.createLogger({level:"debug",format:r,transports:[new n.transports.DailyRotateFile({filename:`${i}/${o}`,level:"info",datePattern:a.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:a.LOG_MAZ_SIZE,maxFiles:a.LOG_MAZ_FILES}),new n.transports.DailyRotateFile({filename:`${i}/${a.LOG_FILENAME_ERRORS}`,level:"error",datePattern:a.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:a.LOG_MAZ_SIZE,maxFiles:a.LOG_MAZ_FILES}),new n.transports.DailyRotateFile({filename:`${i}/${a.LOG_FILENAME_DEBUG}`,level:"debug",datePattern:a.LOG_DATE_PATTERNT,zippedArchive:!0,maxSize:a.LOG_MAZ_SIZE,maxFiles:a.LOG_MAZ_FILES})]})},i.default=i.configureFileStorageLogger},function(e,i){e.exports=require("winston")},function(e,i){e.exports=require("winston-daily-rotate-file")}]);